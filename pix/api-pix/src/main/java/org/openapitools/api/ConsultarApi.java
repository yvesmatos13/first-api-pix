/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.2.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.ExcecaoInfraEstrutura;
import org.openapitools.model.ExcecaoNegocio;
import org.openapitools.model.IncluirChaveResponse;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-04-25T19:18:58.442807-03:00[America/Sao_Paulo]")
@Validated
@Tag(name = "consultar", description = "the consultar API")
public interface ConsultarApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /consultar/{chave} : consultarChave
     *
     * @param chave  (required)
     * @return  (status code 200)
     *         or  (status code 400)
     *         or  (status code 500)
     */
    @Operation(
        operationId = "consultarChaveGet",
        summary = "consultarChave",
        tags = { "consultar" },
        responses = {
            @ApiResponse(responseCode = "200", description = "", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = IncluirChaveResponse.class))
            }),
            @ApiResponse(responseCode = "400", description = "", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ExcecaoNegocio.class))
            }),
            @ApiResponse(responseCode = "500", description = "", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ExcecaoInfraEstrutura.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/pix/api/v1/consultar/{chave}",
        produces = { "application/json" }
    )
    
    default ResponseEntity<String> consultarChaveGet(
        @Parameter(name = "chave", description = "", required = true, in = ParameterIn.PATH) @PathVariable("chave") String chave
    ) 
    
    {
      //  getRequest().ifPresent(request -> {
      //      for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
      //          if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
      //              String exampleString = "{ \"chave\" : \"some text\", \"dataCriacaoChave\" : \"2018-02-10T09:30Z\", \"dataInicioPosseChave\" : \"2018-02-10T09:30Z\", \"dataAberturaReivindicacao\" : \"2018-02-10T09:30Z\" }";
      //              ApiUtil.setExampleResponse(request, "application/json", exampleString);
      //              break;
      //          }
      //      }
      //  });
        String exampleString = "{ \"chave\" : \"some text\", \"dataCriacaoChave\" : \"2018-02-10T09:30Z\", \"dataInicioPosseChave\" : \"2018-02-10T09:30Z\", \"dataAberturaReivindicacao\" : \"2018-02-10T09:30Z\" }";

        return new ResponseEntity<String>(exampleString,HttpStatus.OK);

    }

}
